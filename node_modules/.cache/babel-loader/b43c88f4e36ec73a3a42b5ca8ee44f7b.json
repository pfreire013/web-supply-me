{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/components/InputRadio/InputRadio.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, RadioContainer, CheckContainer, NotCheckContainer, LabelText } from './styles';\n\nconst InputRadio = ({\n  labelText\n}) => {\n  _s();\n\n  const [isChecked, setIsChecked] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(RadioContainer, {\n      onClick: () => setIsChecked(!isChecked),\n      children: isChecked ? /*#__PURE__*/_jsxDEV(CheckContainer, {\n        children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NotCheckContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelText, {\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputRadio, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n\n_c = InputRadio;\nexport default InputRadio;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputRadio\");","map":{"version":3,"sources":["/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/components/InputRadio/InputRadio.tsx"],"names":["React","useState","Container","RadioContainer","CheckContainer","NotCheckContainer","LabelText","InputRadio","labelText","isChecked","setIsChecked"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,SADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,SALF,QAMO,UANP;;AAYA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACrD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,MAAMS,YAAY,CAAC,CAACD,SAAF,CAA3C;AAAA,gBACGA,SAAS,gBACR,QAAC,cAAD;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADQ,gBAKR,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,SAAD;AAAA,gBAAYD;AAAZ;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;GAAMD,U;;KAAAA,U;AAkBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  Container,\n  RadioContainer,\n  CheckContainer,\n  NotCheckContainer,\n  LabelText,\n} from './styles';\n\ninterface Props {\n  labelText?: string;\n}\n\nconst InputRadio: React.FC<Props> = ({ labelText }) => {\n  const [isChecked, setIsChecked] = useState(false);\n  return (\n    <Container>\n      <RadioContainer onClick={() => setIsChecked(!isChecked)}>\n        {isChecked ? (\n          <CheckContainer>\n            <CheckIcon />\n          </CheckContainer>\n        ) : (\n          <NotCheckContainer />\n        )}\n      </RadioContainer>\n      <LabelText>{labelText}</LabelText>\n    </Container>\n  );\n};\n\nexport default InputRadio;\n"]},"metadata":{},"sourceType":"module"}