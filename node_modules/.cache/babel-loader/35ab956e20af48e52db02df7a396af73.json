{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/components/RequestServiceForm/RequestServiceForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { createMuiTheme } from '@material-ui/core';\nimport { FormContainer, InputText } from './styles';\n\nconst RequestServiceForm = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      // email\n      phone: '',\n      country: '',\n      city: '',\n      postalCode: '',\n      address: '',\n      language: '',\n      mandatoryLanguage: null,\n      serviceDescription: '',\n      urgentService: null,\n      contactPlatform: null\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Name is a required field'),\n      // email\n      phone: Yup.string().min(12, 'Phone number is not a valid').required('Phone is a required field'),\n      country: Yup.string().required('Coutry is a required field'),\n      city: Yup.string().required('City is a required field'),\n      postalCode: Yup.string().required('Postal Code is a required field'),\n      address: Yup.string().required('Address is a required field'),\n      language: Yup.string().required('Language is a required field') // mandatoryLanguage: Yup.boolean(),\n      // serviceDescription: Yup.string(),\n      // urgentService: Yup.boolean(),\n      // contactPlatform: Yup.boolean(),\n\n    }),\n    onSubmit: values => console.log(values)\n  });\n  const Muitheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#3574F2'\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(InputText, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RequestServiceForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = RequestServiceForm;\nexport default RequestServiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestServiceForm\");","map":{"version":3,"sources":["/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/components/RequestServiceForm/RequestServiceForm.tsx"],"names":["React","useFormik","Yup","createMuiTheme","FormContainer","InputText","RequestServiceForm","formik","initialValues","name","phone","country","city","postalCode","address","language","mandatoryLanguage","serviceDescription","urgentService","contactPlatform","validationSchema","object","shape","string","required","min","onSubmit","values","console","log","Muitheme","palette","primary","main"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,UAAzC;;AAGA,MAAMC,kBAA4B,GAAG,MAAM;AAAA;;AACzC,QAAMC,MAAM,GAAGN,SAAS,CAAC;AACvBO,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,EADO;AAEb;AACAC,MAAAA,KAAK,EAAE,EAHM;AAIbC,MAAAA,OAAO,EAAE,EAJI;AAKbC,MAAAA,IAAI,EAAE,EALO;AAMbC,MAAAA,UAAU,EAAE,EANC;AAObC,MAAAA,OAAO,EAAE,EAPI;AAQbC,MAAAA,QAAQ,EAAE,EARG;AASbC,MAAAA,iBAAiB,EAAE,IATN;AAUbC,MAAAA,kBAAkB,EAAE,EAVP;AAWbC,MAAAA,aAAa,EAAE,IAXF;AAYbC,MAAAA,eAAe,EAAE;AAZJ,KADQ;AAevBC,IAAAA,gBAAgB,EAAElB,GAAG,CAACmB,MAAJ,GAAaC,KAAb,CAAmB;AACnCb,MAAAA,IAAI,EAAEP,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CAD6B;AAEnC;AACAd,MAAAA,KAAK,EAAER,GAAG,CAACqB,MAAJ,GACJE,GADI,CACA,EADA,EACI,6BADJ,EAEJD,QAFI,CAEK,2BAFL,CAH4B;AAMnCb,MAAAA,OAAO,EAAET,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,4BAAtB,CAN0B;AAOnCZ,MAAAA,IAAI,EAAEV,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CAP6B;AAQnCX,MAAAA,UAAU,EAAEX,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,iCAAtB,CARuB;AASnCV,MAAAA,OAAO,EAAEZ,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,6BAAtB,CAT0B;AAUnCT,MAAAA,QAAQ,EAAEb,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CAVyB,CAWnC;AACA;AACA;AACA;;AAdmC,KAAnB,CAfK;AA+BvBE,IAAAA,QAAQ,EAAEC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ;AA/BG,GAAD,CAAxB;AAkCA,QAAMG,QAAQ,GAAG3B,cAAc,CAAC;AAC9B4B,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC;AADF;AADqB,GAAD,CAA/B;AAQA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhDD;;GAAM3B,kB;UACWL,S;;;KADXK,kB;AAkDN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { createMuiTheme } from '@material-ui/core';\n\nimport { FormContainer, InputText } from './styles';\nimport theme from '../../theme';\n\nconst RequestServiceForm: React.FC = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      // email\n      phone: '',\n      country: '',\n      city: '',\n      postalCode: '',\n      address: '',\n      language: '',\n      mandatoryLanguage: null,\n      serviceDescription: '',\n      urgentService: null,\n      contactPlatform: null,\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Name is a required field'),\n      // email\n      phone: Yup.string()\n        .min(12, 'Phone number is not a valid')\n        .required('Phone is a required field'),\n      country: Yup.string().required('Coutry is a required field'),\n      city: Yup.string().required('City is a required field'),\n      postalCode: Yup.string().required('Postal Code is a required field'),\n      address: Yup.string().required('Address is a required field'),\n      language: Yup.string().required('Language is a required field'),\n      // mandatoryLanguage: Yup.boolean(),\n      // serviceDescription: Yup.string(),\n      // urgentService: Yup.boolean(),\n      // contactPlatform: Yup.boolean(),\n    }),\n    onSubmit: values => console.log(values),\n  });\n\n  const Muitheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#3574F2',\n      },\n    },\n  });\n\n  return (\n    <FormContainer>\n      <InputText />\n    </FormContainer>\n  );\n};\n\nexport default RequestServiceForm;\n"]},"metadata":{},"sourceType":"module"}