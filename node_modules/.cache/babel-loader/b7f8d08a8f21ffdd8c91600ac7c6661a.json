{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/components/RequestServiceForm/RequestServiceForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core';\nimport { FaWhatsapp, FaTelegramPlane } from 'react-icons/fa';\nimport { RiMessengerLine } from 'react-icons/ri';\nimport InputMask from 'react-input-mask';\nimport Services from '../../API/Services';\nimport { FormContainer, InputText, useStyles, LineContainer, InputSelect, SelectContainer, SelectLabel, SelectOption, InputTextArea, RadioContainer, RadioLabel, InputRadio, RadioOption, CardRadio, ButtonRequest, TextRequest, LabelForm, PlatformChooseContainer, PlatformOptions, PlatformDescription, SelectError } from './styles';\nimport PlatfomOption from '../PlatfomOption';\nimport theme from '../../theme';\n\nconst RequestServiceForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const useTheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#3574F2'\n      }\n    }\n  });\n  const [platforms, setPlatforms] = useState([]);\n  const formRef = useRef(null);\n\n  const handleOnSubmit = values => {\n    console.log('values', values);\n    console.log('platforms', platforms);\n    Services.requestService();\n  };\n\n  const handleSetPlatform = platform => {\n    if (platforms.includes(platform)) {\n      const index = platforms.indexOf(platform);\n\n      if (index > -1) {\n        platforms.splice(index, 1);\n      }\n\n      return;\n    }\n\n    platforms.push(platform);\n    setPlatforms(platforms);\n  };\n\n  const handleGoogleAutoComplete = nativeEvent => {\n    var _formRef$current;\n\n    console.log('event', nativeEvent.target.value);\n    const InputAddress = nativeEvent.target.value;\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setFieldValue('address', InputAddress);\n    Services.getGoogleLocatio(InputAddress).then(res => console.log('res', res)).catch(e => console.log('e', e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: useTheme,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formRef,\n        onSubmit: values => handleOnSubmit(values),\n        initialValues: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          phone: '',\n          country: '',\n          city: '',\n          postalCode: '',\n          address: '',\n          complement: '',\n          language: '',\n          mandatoryLanguage: undefined,\n          serviceDescription: '',\n          urgentService: '',\n          contactPlatform: undefined\n        },\n        validationSchema: Yup.object().shape({\n          firstName: Yup.string().required('Fist Name is a required field'),\n          lastName: Yup.string().required('Last Name is a required field'),\n          email: Yup.string().email('Email is not a valid').required('Email is a required field'),\n          phone: Yup.string().min(12, 'Phone number is not a valid').required('Phone is a required field'),\n          country: Yup.string().required('Coutry is a required field'),\n          city: Yup.string().required('City is a required field'),\n          postalCode: Yup.string().required('Postal Code is a required field'),\n          address: Yup.string().required('Address is a required field'),\n          complement: Yup.string(),\n          language: Yup.string().required('Language is a required field'),\n          mandatoryLanguage: Yup.boolean(),\n          serviceDescription: Yup.string(),\n          urgentService: Yup.string(),\n          contactPlatform: Yup.boolean()\n        }),\n        children: ({\n          values,\n          handleChange,\n          setFieldTouched,\n          touched,\n          errors,\n          handleSubmit\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(LineContainer, {\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              label: \"First Name\",\n              className: classes.inputFirstName,\n              value: values.firstName,\n              onChange: handleChange('firstName'),\n              onBlur: () => setFieldTouched('firstName'),\n              error: !!(errors.firstName && touched.firstName),\n              helperText: errors.firstName && touched.firstName ? errors.firstName : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              label: \"Last Name\",\n              className: classes.inputLastName,\n              value: values.lastName,\n              onChange: handleChange('lastName'),\n              onBlur: () => setFieldTouched('lastName'),\n              error: !!(errors.lastName && touched.lastName),\n              helperText: errors.lastName && touched.lastName ? errors.lastName : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineContainer, {\n            children: [/*#__PURE__*/_jsxDEV(InputMask, {\n              mask: \"+999 999 999 999\",\n              value: values.phone,\n              onChange: handleChange('phone'),\n              onBlur: () => setFieldTouched('phone'),\n              children: /*#__PURE__*/_jsxDEV(InputText, {\n                label: \"Phone\",\n                className: classes.inputPhone,\n                error: !!(errors.phone && touched.phone),\n                helperText: errors.phone && touched.phone ? errors.phone : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              label: \"Email\",\n              className: classes.inputEmail,\n              value: values.email,\n              onChange: handleChange('email'),\n              onBlur: () => setFieldTouched('email'),\n              error: !!(errors.email && touched.email),\n              helperText: errors.email && touched.email ? errors.email : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineContainer, {\n            children: /*#__PURE__*/_jsxDEV(SelectContainer, {\n              className: classes.inputAddress,\n              children: /*#__PURE__*/_jsxDEV(InputText, {\n                label: \"Address\",\n                className: classes.inputAddress,\n                value: values.address,\n                onChange: ({\n                  nativeEvent\n                }) => {\n                  handleGoogleAutoComplete(nativeEvent);\n                },\n                onBlur: () => setFieldTouched('address'),\n                error: !!(errors.address && touched.address),\n                helperText: errors.address && touched.address ? errors.address : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SelectContainer, {\n              className: classes.inputCity,\n              children: [/*#__PURE__*/_jsxDEV(SelectLabel, {\n                id: \"select-city\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n                labelId: \"select-city\",\n                id: \"demo-simple-select-outlined\",\n                label: \"city\",\n                value: values.city,\n                onChange: handleChange('city'),\n                onBlur: () => setFieldTouched('city'),\n                error: !!(errors.city && touched.city),\n                children: [/*#__PURE__*/_jsxDEV(SelectOption, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SelectOption, {\n                  value: \"Lisboa\",\n                  children: \"Lisboa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SelectOption, {\n                  value: \"Porto\",\n                  children: \"Porto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SelectOption, {\n                  value: \"Portalegre\",\n                  children: \"Portalegre\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SelectOption, {\n                  value: \"Viseu\",\n                  children: \"Viseu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SelectError, {\n                style: {\n                  color: theme.color.red\n                },\n                children: errors.city && touched.city ? errors.city : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              label: \"Postal Code\",\n              className: classes.inputPostalCode,\n              value: values.postalCode,\n              onChange: handleChange('postalCode'),\n              onBlur: () => setFieldTouched('postalCode'),\n              error: !!(errors.postalCode && touched.postalCode),\n              helperText: errors.postalCode && touched.postalCode ? errors.postalCode : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineContainer, {\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              label: \"Complement\",\n              className: classes.inputComplement,\n              value: values.complement,\n              onChange: handleChange('complement'),\n              onBlur: () => setFieldTouched('complement'),\n              error: !!(errors.complement && touched.complement),\n              helperText: errors.complement && touched.complement ? errors.complement : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputTextArea, {\n            label: \"Service Description\",\n            multiline: true,\n            rows: 4,\n            fullWidth: true,\n            className: classes.inputServiceDescription,\n            value: values.serviceDescription,\n            onChange: handleChange('serviceDescription'),\n            onBlur: () => setFieldTouched('serviceDescription'),\n            error: !!(errors.serviceDescription && touched.serviceDescription),\n            helperText: errors.serviceDescription && touched.serviceDescription ? errors.serviceDescription : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RadioContainer, {\n            children: [/*#__PURE__*/_jsxDEV(RadioLabel, {\n              children: \"Is a urgent service ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputRadio, {\n              row: true,\n              onChange: handleChange('urgentService'),\n              value: values.urgentService,\n              children: [/*#__PURE__*/_jsxDEV(RadioOption, {\n                label: \"Yes\",\n                control: /*#__PURE__*/_jsxDEV(CardRadio, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 30\n                }, this),\n                value: \"yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RadioOption, {\n                label: \"No\",\n                control: /*#__PURE__*/_jsxDEV(CardRadio, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 30\n                }, this),\n                value: \"no\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PlatformChooseContainer, {\n            children: [/*#__PURE__*/_jsxDEV(LabelForm, {\n              children: \"Platform where you prefer to be contacted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PlatformOptions, {\n              children: [/*#__PURE__*/_jsxDEV(PlatfomOption, {\n                icon: /*#__PURE__*/_jsxDEV(FaWhatsapp, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 27\n                }, this),\n                color: theme.color.whatsapp,\n                handleClick: () => handleSetPlatform('whatsapp')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PlatfomOption, {\n                icon: /*#__PURE__*/_jsxDEV(FaTelegramPlane, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 27\n                }, this),\n                color: theme.color.telegram,\n                handleClick: () => handleSetPlatform('telegram')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PlatfomOption, {\n                icon: /*#__PURE__*/_jsxDEV(RiMessengerLine, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 27\n                }, this),\n                color: theme.color.messenger,\n                handleClick: () => handleSetPlatform('messenger')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PlatformDescription, {\n              children: \"*The chosen platform will be where our professional will contact you in order to start the conversation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonRequest, {\n            className: classes.buttonRequest,\n            onClick: () => handleSubmit(),\n            children: /*#__PURE__*/_jsxDEV(TextRequest, {\n              children: \"Request your quotes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RequestServiceForm, \"QDgBvuLhdhJVVfsdd86+RLMfOzc=\", false, function () {\n  return [useStyles];\n});\n\n_c = RequestServiceForm;\nexport default RequestServiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestServiceForm\");","map":{"version":3,"sources":["/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/components/RequestServiceForm/RequestServiceForm.tsx"],"names":["React","useRef","useState","Formik","Yup","ThemeProvider","createMuiTheme","FaWhatsapp","FaTelegramPlane","RiMessengerLine","InputMask","Services","FormContainer","InputText","useStyles","LineContainer","InputSelect","SelectContainer","SelectLabel","SelectOption","InputTextArea","RadioContainer","RadioLabel","InputRadio","RadioOption","CardRadio","ButtonRequest","TextRequest","LabelForm","PlatformChooseContainer","PlatformOptions","PlatformDescription","SelectError","PlatfomOption","theme","RequestServiceForm","classes","useTheme","palette","primary","main","platforms","setPlatforms","formRef","handleOnSubmit","values","console","log","requestService","handleSetPlatform","platform","includes","index","indexOf","splice","push","handleGoogleAutoComplete","nativeEvent","target","value","InputAddress","current","setFieldValue","getGoogleLocatio","then","res","catch","e","firstName","lastName","email","phone","country","city","postalCode","address","complement","language","mandatoryLanguage","undefined","serviceDescription","urgentService","contactPlatform","object","shape","string","required","min","boolean","handleChange","setFieldTouched","touched","errors","handleSubmit","inputFirstName","inputLastName","inputPhone","inputEmail","inputAddress","inputCity","color","red","inputPostalCode","inputComplement","inputServiceDescription","whatsapp","telegram","messenger","buttonRequest"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Formik, FormikProps } from 'formik';\nimport * as Yup from 'yup';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core';\nimport { FaWhatsapp, FaTelegramPlane } from 'react-icons/fa';\nimport { RiMessengerLine } from 'react-icons/ri';\nimport InputMask from 'react-input-mask';\nimport Services from '../../API/Services';\nimport {\n  FormContainer,\n  InputText,\n  useStyles,\n  LineContainer,\n  InputSelect,\n  SelectContainer,\n  SelectLabel,\n  SelectOption,\n  CheckboxContainer,\n  InputCheckbox,\n  InputTextArea,\n  RadioContainer,\n  RadioLabel,\n  InputRadio,\n  RadioOption,\n  CardRadio,\n  ButtonRequest,\n  TextRequest,\n  LabelForm,\n  PlatformChooseContainer,\n  PlatformOptions,\n  PlatformDescription,\n  SelectError,\n} from './styles';\nimport PlatfomOption from '../PlatfomOption';\nimport theme from '../../theme';\n\ninterface FormValues {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  country: string;\n  city: string;\n  postalCode: string;\n  address: string;\n  complement?: string;\n  language: string;\n  mandatoryLanguage?: boolean;\n  serviceDescription?: string;\n  urgentService?: string;\n  contactPlatform?: Array<string>;\n}\n\nconst RequestServiceForm: React.FC = () => {\n  const classes = useStyles();\n  const useTheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#3574F2',\n      },\n    },\n  });\n  const [platforms, setPlatforms] = useState<string[]>([]);\n  const formRef = useRef<FormikProps<FormValues>>(null);\n\n  const handleOnSubmit = (values: FormValues) => {\n    console.log('values', values);\n    console.log('platforms', platforms);\n    Services.requestService();\n  };\n\n  const handleSetPlatform = (platform: string) => {\n    if (platforms.includes(platform)) {\n      const index = platforms.indexOf(platform);\n      if (index > -1) {\n        platforms.splice(index, 1);\n      }\n      return;\n    }\n    platforms.push(platform);\n    setPlatforms(platforms);\n  };\n\n  const handleGoogleAutoComplete = (nativeEvent: any) => {\n    console.log('event', nativeEvent.target.value);\n    const InputAddress = nativeEvent.target.value;\n    formRef.current?.setFieldValue('address', InputAddress);\n    Services.getGoogleLocatio(InputAddress)\n      .then(res => console.log('res', res))\n      .catch(e => console.log('e', e));\n  };\n\n  return (\n    <FormContainer>\n      <ThemeProvider theme={useTheme}>\n        <Formik\n          innerRef={formRef}\n          onSubmit={values => handleOnSubmit(values)}\n          initialValues={{\n            firstName: '',\n            lastName: '',\n            email: '',\n            phone: '',\n            country: '',\n            city: '',\n            postalCode: '',\n            address: '',\n            complement: '',\n            language: '',\n            mandatoryLanguage: undefined,\n            serviceDescription: '',\n            urgentService: '',\n            contactPlatform: undefined,\n          }}\n          validationSchema={Yup.object().shape({\n            firstName: Yup.string().required('Fist Name is a required field'),\n            lastName: Yup.string().required('Last Name is a required field'),\n            email: Yup.string()\n              .email('Email is not a valid')\n              .required('Email is a required field'),\n            phone: Yup.string()\n              .min(12, 'Phone number is not a valid')\n              .required('Phone is a required field'),\n            country: Yup.string().required('Coutry is a required field'),\n            city: Yup.string().required('City is a required field'),\n            postalCode: Yup.string().required(\n              'Postal Code is a required field',\n            ),\n            address: Yup.string().required('Address is a required field'),\n            complement: Yup.string(),\n            language: Yup.string().required('Language is a required field'),\n            mandatoryLanguage: Yup.boolean(),\n            serviceDescription: Yup.string(),\n            urgentService: Yup.string(),\n            contactPlatform: Yup.boolean(),\n          })}\n        >\n          {({\n            values,\n            handleChange,\n            setFieldTouched,\n            touched,\n            errors,\n            handleSubmit,\n          }) => (\n            <>\n              <LineContainer>\n                <InputText\n                  label=\"First Name\"\n                  className={classes.inputFirstName}\n                  value={values.firstName}\n                  onChange={handleChange('firstName')}\n                  onBlur={() => setFieldTouched('firstName')}\n                  error={!!(errors.firstName && touched.firstName)}\n                  helperText={\n                    errors.firstName && touched.firstName\n                      ? errors.firstName\n                      : ''\n                  }\n                />\n                <InputText\n                  label=\"Last Name\"\n                  className={classes.inputLastName}\n                  value={values.lastName}\n                  onChange={handleChange('lastName')}\n                  onBlur={() => setFieldTouched('lastName')}\n                  error={!!(errors.lastName && touched.lastName)}\n                  helperText={\n                    errors.lastName && touched.lastName ? errors.lastName : ''\n                  }\n                />\n              </LineContainer>\n              <LineContainer>\n                <InputMask\n                  mask=\"+999 999 999 999\"\n                  value={values.phone}\n                  onChange={handleChange('phone')}\n                  onBlur={() => setFieldTouched('phone')}\n                >\n                  <InputText\n                    label=\"Phone\"\n                    className={classes.inputPhone}\n                    error={!!(errors.phone && touched.phone)}\n                    helperText={\n                      errors.phone && touched.phone ? errors.phone : ''\n                    }\n                  />\n                </InputMask>\n                <InputText\n                  label=\"Email\"\n                  className={classes.inputEmail}\n                  value={values.email}\n                  onChange={handleChange('email')}\n                  onBlur={() => setFieldTouched('email')}\n                  error={!!(errors.email && touched.email)}\n                  helperText={errors.email && touched.email ? errors.email : ''}\n                />\n              </LineContainer>\n              <LineContainer>\n                <SelectContainer className={classes.inputAddress}>\n                  <InputText\n                    label=\"Address\"\n                    className={classes.inputAddress}\n                    value={values.address}\n                    onChange={({ nativeEvent }) => {\n                      handleGoogleAutoComplete(nativeEvent);\n                    }}\n                    onBlur={() => setFieldTouched('address')}\n                    error={!!(errors.address && touched.address)}\n                    helperText={\n                      errors.address && touched.address ? errors.address : ''\n                    }\n                  />\n                </SelectContainer>\n              </LineContainer>\n              <LineContainer>\n                <SelectContainer className={classes.inputCity}>\n                  <SelectLabel id=\"select-city\">City</SelectLabel>\n                  <InputSelect\n                    labelId=\"select-city\"\n                    id=\"demo-simple-select-outlined\"\n                    label=\"city\"\n                    value={values.city}\n                    onChange={handleChange('city')}\n                    onBlur={() => setFieldTouched('city')}\n                    error={!!(errors.city && touched.city)}\n                  >\n                    <SelectOption value=\"\">None</SelectOption>\n                    <SelectOption value=\"Lisboa\">Lisboa</SelectOption>\n                    <SelectOption value=\"Porto\">Porto</SelectOption>\n                    <SelectOption value=\"Portalegre\">Portalegre</SelectOption>\n                    <SelectOption value=\"Viseu\">Viseu</SelectOption>\n                  </InputSelect>\n                  <SelectError style={{ color: theme.color.red }}>\n                    {errors.city && touched.city ? errors.city : ''}\n                  </SelectError>\n                </SelectContainer>\n                <InputText\n                  label=\"Postal Code\"\n                  className={classes.inputPostalCode}\n                  value={values.postalCode}\n                  onChange={handleChange('postalCode')}\n                  onBlur={() => setFieldTouched('postalCode')}\n                  error={!!(errors.postalCode && touched.postalCode)}\n                  helperText={\n                    errors.postalCode && touched.postalCode\n                      ? errors.postalCode\n                      : ''\n                  }\n                />\n              </LineContainer>\n              <LineContainer>\n                {/* <InputText\n                  label=\"Address\"\n                  className={classes.inputAddress}\n                  value={values.address}\n                  onChange={handleChange('address')}\n                  onBlur={() => setFieldTouched('address')}\n                  error={!!(errors.address && touched.address)}\n                  helperText={\n                    errors.address && touched.address ? errors.address : ''\n                  }\n                /> */}\n                <InputText\n                  label=\"Complement\"\n                  className={classes.inputComplement}\n                  value={values.complement}\n                  onChange={handleChange('complement')}\n                  onBlur={() => setFieldTouched('complement')}\n                  error={!!(errors.complement && touched.complement)}\n                  helperText={\n                    errors.complement && touched.complement\n                      ? errors.complement\n                      : ''\n                  }\n                />\n              </LineContainer>\n\n              <InputTextArea\n                label=\"Service Description\"\n                multiline\n                rows={4}\n                fullWidth\n                className={classes.inputServiceDescription}\n                value={values.serviceDescription}\n                onChange={handleChange('serviceDescription')}\n                onBlur={() => setFieldTouched('serviceDescription')}\n                error={\n                  !!(errors.serviceDescription && touched.serviceDescription)\n                }\n                helperText={\n                  errors.serviceDescription && touched.serviceDescription\n                    ? errors.serviceDescription\n                    : ''\n                }\n              />\n              <RadioContainer>\n                <RadioLabel>Is a urgent service ?</RadioLabel>\n                <InputRadio\n                  row\n                  onChange={handleChange('urgentService')}\n                  value={values.urgentService}\n                >\n                  <RadioOption\n                    label=\"Yes\"\n                    control={<CardRadio color=\"primary\" />}\n                    value=\"yes\"\n                  />\n                  <RadioOption\n                    label=\"No\"\n                    control={<CardRadio color=\"primary\" />}\n                    value=\"no\"\n                  />\n                </InputRadio>\n              </RadioContainer>\n              <PlatformChooseContainer>\n                <LabelForm>Platform where you prefer to be contacted</LabelForm>\n                <PlatformOptions>\n                  <PlatfomOption\n                    icon={<FaWhatsapp />}\n                    color={theme.color.whatsapp}\n                    handleClick={() => handleSetPlatform('whatsapp')}\n                  />\n                  <PlatfomOption\n                    icon={<FaTelegramPlane />}\n                    color={theme.color.telegram}\n                    handleClick={() => handleSetPlatform('telegram')}\n                  />\n                  <PlatfomOption\n                    icon={<RiMessengerLine />}\n                    color={theme.color.messenger}\n                    handleClick={() => handleSetPlatform('messenger')}\n                  />\n                </PlatformOptions>\n                <PlatformDescription>\n                  *The chosen platform will be where our professional will\n                  contact you in order to start the conversation\n                </PlatformDescription>\n              </PlatformChooseContainer>\n              <ButtonRequest\n                className={classes.buttonRequest}\n                onClick={() => handleSubmit()}\n              >\n                <TextRequest>Request your quotes</TextRequest>\n              </ButtonRequest>\n            </>\n          )}\n        </Formik>\n      </ThemeProvider>\n    </FormContainer>\n  );\n};\n\nexport default RequestServiceForm;\n"]},"metadata":{},"sourceType":"module"}