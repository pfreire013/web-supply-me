{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/components/PlatfomOption/PlatfomOption.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IconContext } from 'react-icons/lib';\nimport theme from '../../theme';\nimport { Container, ButtonPlatform } from './styles';\n\nconst PlatfomOption = ({\n  icon,\n  color\n}) => {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: {\n        style: {\n          height: 25,\n          width: 25,\n          color: isSelected ? color : theme.color.mediumGrey\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonPlatform, {\n        onClick: () => setIsSelected(!isSelected),\n        color: isSelected ? color : theme.color.mediumGrey,\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlatfomOption, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n\n_c = PlatfomOption;\nexport default PlatfomOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlatfomOption\");","map":{"version":3,"sources":["/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/components/PlatfomOption/PlatfomOption.tsx"],"names":["React","useState","IconContext","theme","Container","ButtonPlatform","PlatfomOption","icon","color","isSelected","setIsSelected","style","height","width","mediumGrey"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAAsC,iBAAtC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,UAA1C;;AAOA,MAAMC,aAA8B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAAA;;AAC1D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLU,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,EADH;AAELC,UAAAA,KAAK,EAAE,EAFF;AAGLL,UAAAA,KAAK,EAAEC,UAAU,GAAGD,KAAH,GAAWL,KAAK,CAACK,KAAN,CAAYM;AAHnC;AADF,OADT;AAAA,6BASE,QAAC,cAAD;AACE,QAAA,OAAO,EAAE,MAAMJ,aAAa,CAAC,CAACD,UAAF,CAD9B;AAEE,QAAA,KAAK,EAAEA,UAAU,GAAGD,KAAH,GAAWL,KAAK,CAACK,KAAN,CAAYM,UAF1C;AAAA,kBAIGP;AAJH;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtBD;;GAAMD,a;;KAAAA,a;AAwBN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { IconContext, IconType } from 'react-icons/lib';\nimport theme from '../../theme';\nimport { Container, ButtonPlatform } from './styles';\n\ninterface Props {\n  icon: JSX.Element;\n  color: string;\n}\n\nconst PlatfomOption: React.FC<Props> = ({ icon, color }) => {\n  const [isSelected, setIsSelected] = useState(false);\n  return (\n    <Container>\n      <IconContext.Provider\n        value={{\n          style: {\n            height: 25,\n            width: 25,\n            color: isSelected ? color : theme.color.mediumGrey,\n          },\n        }}\n      >\n        <ButtonPlatform\n          onClick={() => setIsSelected(!isSelected)}\n          color={isSelected ? color : theme.color.mediumGrey}\n        >\n          {icon}\n        </ButtonPlatform>\n      </IconContext.Provider>\n    </Container>\n  );\n};\n\nexport default PlatfomOption;\n"]},"metadata":{},"sourceType":"module"}