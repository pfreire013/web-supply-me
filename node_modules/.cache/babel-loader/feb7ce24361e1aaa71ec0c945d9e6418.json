{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/pages/RequestService/RequestService.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Header from '../../components/Header';\nimport { Container, Main, Title, Description, TextInformationContainer, FormContainer } from './styles';\n\nconst RequestService = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      // email\n      phone: '',\n      country: '',\n      city: '',\n      postalCode: '',\n      address: '',\n      language: '',\n      mandatoryLanguage: null,\n      serviceDescription: '',\n      urgentService: null,\n      contactPlatform: null\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Name is a required field'),\n      // email\n      phone: Yup.string().min(12, 'Phone number is not a valid').required('Phone is a required field'),\n      country: Yup.string().required('Coutry is a required field'),\n      city: Yup.string().required('City is a required field'),\n      postalCode: Yup.string().required('Postal Code is a required field'),\n      address: Yup.string().required('Address is a required field'),\n      language: Yup.string().required('Language is a required field') // mandatoryLanguage: Yup.boolean(),\n      // serviceDescription: Yup.string(),\n      // urgentService: Yup.boolean(),\n      // contactPlatform: Yup.boolean(),\n\n    }),\n    onSubmit: values => console.log(values)\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      minimalist: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Main, {\n        children: [/*#__PURE__*/_jsxDEV(TextInformationContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Needing a Day Laborer?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Description, {\n            children: \"We have thousands of professionals available for your needs, after a few moments they will contact you so you can choose the best one.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Description, {\n            children: \"To help our professional filtering please write a brief description about the service.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RequestService, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = RequestService;\nexport default RequestService;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestService\");","map":{"version":3,"sources":["/Users/josefreire/Desktop/Desk/MyWorkspace/4house/web-supply-me/src/pages/RequestService/RequestService.tsx"],"names":["React","useFormik","Yup","Header","Container","Main","Title","Description","TextInformationContainer","FormContainer","RequestService","formik","initialValues","name","phone","country","city","postalCode","address","language","mandatoryLanguage","serviceDescription","urgentService","contactPlatform","validationSchema","object","shape","string","required","min","onSubmit","values","console","log"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAIA,SACEC,SADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,wBALF,EAMEC,aANF,QAkBO,UAlBP;;AAsBA,MAAMC,cAAwB,GAAG,MAAM;AAAA;;AACrC,QAAMC,MAAM,GAAGV,SAAS,CAAC;AACvBW,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,EADO;AAEb;AACAC,MAAAA,KAAK,EAAE,EAHM;AAIbC,MAAAA,OAAO,EAAE,EAJI;AAKbC,MAAAA,IAAI,EAAE,EALO;AAMbC,MAAAA,UAAU,EAAE,EANC;AAObC,MAAAA,OAAO,EAAE,EAPI;AAQbC,MAAAA,QAAQ,EAAE,EARG;AASbC,MAAAA,iBAAiB,EAAE,IATN;AAUbC,MAAAA,kBAAkB,EAAE,EAVP;AAWbC,MAAAA,aAAa,EAAE,IAXF;AAYbC,MAAAA,eAAe,EAAE;AAZJ,KADQ;AAevBC,IAAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AACnCb,MAAAA,IAAI,EAAEX,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CAD6B;AAEnC;AACAd,MAAAA,KAAK,EAAEZ,GAAG,CAACyB,MAAJ,GACJE,GADI,CACA,EADA,EACI,6BADJ,EAEJD,QAFI,CAEK,2BAFL,CAH4B;AAMnCb,MAAAA,OAAO,EAAEb,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,4BAAtB,CAN0B;AAOnCZ,MAAAA,IAAI,EAAEd,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CAP6B;AAQnCX,MAAAA,UAAU,EAAEf,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,iCAAtB,CARuB;AASnCV,MAAAA,OAAO,EAAEhB,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,6BAAtB,CAT0B;AAUnCT,MAAAA,QAAQ,EAAEjB,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CAVyB,CAWnC;AACA;AACA;AACA;;AAdmC,KAAnB,CAfK;AA+BvBE,IAAAA,QAAQ,EAAEC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ;AA/BG,GAAD,CAAxB;AAkCA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,UAAU;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,wBAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAuBD,CA1DD;;GAAMrB,c;UACWT,S;;;KADXS,c;AA4DN,eAAeA,cAAf","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Header from '../../components/Header';\nimport InputMask from '../../components/InputMask';\nimport InputRadio from '../../components/InputRadio';\nimport InputText from '../../components/InputText';\nimport {\n  Container,\n  Main,\n  Title,\n  Description,\n  TextInformationContainer,\n  FormContainer,\n  FormLine,\n  MandatoryLanguageContainer,\n  InputTitle,\n  InputServiceDescription,\n  ServiceDescription,\n  LabelTitle,\n  RadioContainer,\n  UrgentServiceContainer,\n  ButtonText,\n  RequestButton,\n  TextText,\n} from './styles';\nimport InputDropdown from '../../components/InputDropdown';\nimport { EUCountries } from '../../utils';\n\nconst RequestService: React.FC = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      // email\n      phone: '',\n      country: '',\n      city: '',\n      postalCode: '',\n      address: '',\n      language: '',\n      mandatoryLanguage: null,\n      serviceDescription: '',\n      urgentService: null,\n      contactPlatform: null,\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Name is a required field'),\n      // email\n      phone: Yup.string()\n        .min(12, 'Phone number is not a valid')\n        .required('Phone is a required field'),\n      country: Yup.string().required('Coutry is a required field'),\n      city: Yup.string().required('City is a required field'),\n      postalCode: Yup.string().required('Postal Code is a required field'),\n      address: Yup.string().required('Address is a required field'),\n      language: Yup.string().required('Language is a required field'),\n      // mandatoryLanguage: Yup.boolean(),\n      // serviceDescription: Yup.string(),\n      // urgentService: Yup.boolean(),\n      // contactPlatform: Yup.boolean(),\n    }),\n    onSubmit: values => console.log(values),\n  });\n\n  return (\n    <>\n      <Header minimalist />\n      <Container>\n        <Main>\n          <TextInformationContainer>\n            <Title>Needing a Day Laborer?</Title>\n            <Description>\n              We have thousands of professionals available for your needs, after\n              a few moments they will contact you so you can choose the best\n              one.\n            </Description>\n            <Description>\n              To help our professional filtering please write a brief\n              description about the service.\n            </Description>\n          </TextInformationContainer>\n\n          <FormContainer />\n        </Main>\n      </Container>\n    </>\n  );\n};\n\nexport default RequestService;\n"]},"metadata":{},"sourceType":"module"}